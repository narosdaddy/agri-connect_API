version: '3.8'

services:
  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    container_name: agriconnect-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: agriconnect_db
      MYSQL_USER: agriconnect_user
      MYSQL_PASSWORD: agriconnect_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init-mysql.sql:/docker-entrypoint-initdb.d/init-mysql.sql
    networks:
      - agriconnect-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "agriconnect_user", "-pagriconnect_password"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    container_name: agriconnect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agriconnect-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application Spring Boot
  api:
    build: .
    container_name: agriconnect-api
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/agriconnect_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: agriconnect_user
      SPRING_DATASOURCE_PASSWORD: agriconnect_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - agriconnect-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx pour servir les fichiers statiques (optionnel)
  nginx:
    image: nginx:alpine
    container_name: agriconnect-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./uploads:/usr/share/nginx/html/uploads
    depends_on:
      - api
    networks:
      - agriconnect-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  agriconnect-network:
    driver: bridge 